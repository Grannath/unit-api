import java.util.regex.Pattern

def generateReadme(artifactNames) {
    def maven = "**Maven**\n```xml\n"
    def gradle = "**Gradle**\n```groovy\n"

    for (module in artifactNames) {
        maven += "<dependency>\n"
        maven += "    <groupId>$project.group</groupId>\n"
        maven += "    <artifactId>$module</artifactId>\n"
        maven += "    <version>$project.version</version>\n"
        maven += "</dependency>\n"
        gradle += "implementation(\"$project.group:$module:$project.version\")\n"
    }
    maven += "```\n"
    gradle += "```\n"

    return "$maven\n$gradle"
}

task updateReadme() {
    doFirst {
        def readme = new File("README.md").text as String
        def pattern = Pattern.compile("<!-- MODULE_LIST: ([A-z-_,]*) -->(\\n[^#]*)*<!-- END_MODULE_LIST -->")
        def matcher = pattern.matcher(readme)
        for (match in matcher) {
            String full_match = match.get(0)
            List<String> artifactNames = (match.get(1).split(",")) as List
            String generatedBlock = "<!-- MODULE_LIST: ${String.join(",", artifactNames)} -->\n${generateReadme(artifactNames)}<!-- END_MODULE_LIST -->"
            readme = readme.replace(full_match, generatedBlock)
        }
        new File("README.md").write(readme)
    }
}