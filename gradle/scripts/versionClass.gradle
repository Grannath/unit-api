import java.time.OffsetDateTime

task generateVersionClass() {
    mustRunAfter(clean)
    group = 'build'
    doFirst {
        def targetDirectory = projectDir.toPath().resolve("build/generated/sources/version/java")
        // change package name
        def packageName = project.group.replace("-", "_") + "." + project.name.replace("-", "_")
        targetDirectory = targetDirectory.resolve(packageName.replace(".", "/"))
        targetDirectory.toFile().mkdirs()
        new File(targetDirectory.toFile(), "BuildVersion.java").text = """package ${packageName};
import java.time.OffsetDateTime;

public class BuildVersion {
    public static final String ARTIFACT_ID = "${project.name}";
    public static final String GROUP_ID = "${project.group}";


    public static final String VERSION = "${project.version}";
    public static final int MAJOR_VERSION = ${(project.version as String).split("\\.")[0]};
    public static final int MINOR_VERSION = ${(project.version as String).split("\\.")[1]};
    public static final int PATCH_VERSION = ${(project.version as String).split("\\.")[2].split('-')[0]};
    public static final boolean SNAPSHOT = ${(project.version as String).contains("-")};
    public static final OffsetDateTime BUILD_DATE = OffsetDateTime.parse("${OffsetDateTime.now().toString()}");
}"""
    }
}

tasks.getByName('compileJava').dependsOn(generateVersionClass)